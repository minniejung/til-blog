import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'
import { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism'

import { TilCardType } from '../types/types'

export const dataDefi: TilCardType[] = [
	{
		id: 0,
		date: '30/04/2025',
		tags: ['Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'DEX & Defi',
		content: (
			<div>
				<h3>DEX란</h3>
				<pre>{`✔️ 중앙 관리자 없이 스마트 컨트랙트를 이용해 자동으로 토큰을 교환할 수 있도록 만든 플랫폼
✔️ 사용자는 지갑에서 직접 거래하며, 거래소에 자산을 예치할 필요가 없음

대표적인 DEX:

    Uniswap
    SushiSwap
    PancakeSwap (BNB Chain)
    Curve
    Balancer`}</pre>

				<h3>CeFi (Centralized Finance)</h3>
				<pre>{`- 중앙화된 금융 시스템
- 은행이나 중앙 기관을 통해 거래
- 거래 내역은 중앙 기관이 보유 및 통제
- 예: 시중 은행, 업비트, 빗썸 등 중앙화 거래소(CEX)

✅ CeFi 장점
- 익숙한 시스템과 인터페이스
- 빠른 거래 속도와 고객 지원

❌ CeFi 단점
- 중앙 기관의 통제 및 검열 가능성
- 개인정보 요구 및 해킹 위험`}</pre>

				<h3>DeFi (Decentralized Finance)</h3>
				<pre>{`- 탈중앙화된 금융 생태계
- 블록체인 네트워크 상에서 스마트 컨트랙트 기반으로 운영
- 중개 기관 없이 개인 간 직접 금융 거래
- 예: 예금, 대출, 보험, 펀드, 자산 운용 등

✅ DeFi 장점
- 탈중앙화, 투명성
- P2P 거래, 글로벌 접근성, 낮은 수수료

❌ DeFi 단점
- 사용성 어려움 (지갑, 키 관리)
- 책임의 개인화, 변동성 리스크`}</pre>

				<h3>DeFi의 금융 메커니즘</h3>
				<pre>{`📌 예금과 대출
- CeFi: 은행을 통한 신용 기반 대출
- DeFi: 스마트 컨트랙트를 통해 자산 담보 기반 대출

📌 펀드와 자산 운용
- 사용자 자산을 모아 DeFi 프로토콜에 투자
- 예: 유니스왑, 컴파운드 등`}</pre>

				<h3>DeFi의 차별화 요소</h3>
				<pre>{`✅ 스테이킹 (Staking)
- PoS 기반 블록체인에서 코인 예치로 보상 획득
- 검증자로 참여, 주로 스테이킹 풀 사용

✅ 유동성 공급 (Liquidity Providing)
- DEX의 원활한 거래를 위한 자산 예치
- 공급자는 거래 수수료 일부를 수익으로 받음`}</pre>

				<h3>DEX vs CEX 비교</h3>
				<pre>{`✔️ 관리 주체:
    - CEX는 중앙 기관이 운영합니다.
    - DEX는 스마트 컨트랙트에 의해 자동으로 운영되며 중앙 관리자가 없습니다.

✔️ 자산 보관:
    - CEX에서는 사용자의 자산을 거래소가 보관합니다.
    - DEX에서는 사용자가 자신의 지갑에 자산을 직접 보관합니다.

✔️ 인증 절차:
    - CEX는 KYC(신원 인증)가 필요합니다.
    - DEX는 인증 절차가 필요 없습니다.

✔️ 투명성:
    - CEX는 거래 내역이 공개되지 않거나 제한적입니다.
    - DEX는 모든 거래가 온체인에 기록되어 완전히 공개됩니다.

✔️ 수수료:
    - CEX는 수수료가 높을 수 있습니다.
    - DEX는 일반적으로 수수료가 더 낮습니다.`}</pre>

				<h3>스왑과 유동성 공급</h3>
				<pre>{`💱 스왑 (Swap)
- 두 토큰 간 정해진 비율로 교환
- 예: ETH 1개 ↔ USDT 2000개

💧 유동성 공급
- 스왑을 위한 자산 확보
- 유동성 풀에 예치 → 수수료 수익`}</pre>
			</div>
		),
	},
	{
		id: 1,
		date: '30/04/2025',
		tags: ['Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'Uniswap',
		content: (
			<div>
				<h3>유니스왑이란?</h3>
				<pre>{`✔️ 유니스왑은 대표적인 탈중앙화 거래소(DEX)
✔️ 중앙 관리자 없이 블록체인에서 P2P 방식으로 토큰을 직접 교환할 수 있음`}</pre>

				<h3>CEX vs DEX</h3>
				<pre>{`📌 중앙화 거래소(CEX)
    - 사용자의 자산을 거래소가 보관
    - 블록체인이 아닌 내부 장부를 통한 거래 처리
    - UI 기반 편리한 사용 경험 제공

📌 탈중앙화 거래소(DEX)
    - 자산은 사용자가 직접 지갑에 보관
    - 거래는 스마트 컨트랙트를 통해 직접 체결
    - 거래소를 신뢰하지 않아도 되는 구조`}</pre>

				<h3>초기 DEX의 등장: EtherDelta</h3>
				<pre>{`✔️ 이더리움 기반 초기 DEX 중 하나
✔️ 오더북 기반 시스템을 블록체인 위에 구현

하지만 다음과 같은 한계가 존재:
    - 높은 가스비
    - 느린 거래 처리 속도
    - 유동성 부족`}</pre>

				<h3>오더북(Order Book)이란?</h3>
				<pre>{`✔️ 매수/매도 주문을 리스트 형태로 기록한 구조
✔️ 사용자가 원하는 가격과 수량을 제시하면 조건이 맞는 주문과 체결됨
✔️ 전통 주식 시장, 중앙화 거래소(CEX)에서 일반적으로 사용됨`}</pre>

				<h3>EtherDelta의 한계</h3>
				<pre>{`1. 모든 거래 활동(등록, 수정, 취소 등)이 온체인 → 가스비 과도
2. 거래 속도 느림 → 사용자 경험 저하
3. 사용자 부족 → 유동성 부족`}</pre>

				<h3>유니스왑의 등장과 전환점</h3>
				<pre>{`✔️ 오더북 없이도 거래 가능
✔️ AMM(Automated Market Maker) 방식 도입
✔️ 알고리즘 기반으로 가격 결정 및 거래 체결

장점:
    - 유동성 항상 존재
    - 빠른 거래 속도
    - 향상된 사용자 경험`}</pre>

				<h3>AMM의 핵심 메커니즘</h3>
				<pre>{`✔️ 누구나 유동성을 공급할 수 있음
✔️ 공급된 자산을 기반으로 알고리즘이 가격 계산
✔️ 거래는 자동으로 체결됨`}</pre>

				<h3>유니스왑의 탄생 이야기</h3>
				<pre>{`✔️ 창시자: Hayden Adams (기계공학 출신)
✔️ 해고 후 친구의 조언으로 스마트 컨트랙트 학습 시작
✔️ 작은 개인 프로젝트로 시작해 DeFi의 핵심 인프라로 성장`}</pre>

				<h3>유니스왑의 의의</h3>
				<pre>{`✔️ 단순한 DEX를 넘어서 새로운 거래 방식 제안
✔️ DEX의 한계를 극복하고 대중화에 성공
✔️ AMM 기반 DEX의 표준을 제시한 플랫폼`}</pre>
			</div>
		),
	},
	{
		id: 2,
		date: '30/04/2025',
		tags: ['Liquidity', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'Liquidity',
		content: (
			<div>
				<h3>유동성이란?</h3>
				<pre>{`✔️ 유니스왑(Uniswap)의 핵심은은 유동성(Liquidity)
✔️ 유동성은 거래소가 제대로 작동하기 위한 가장 중요한 요소.
✔️ 많은 거래소가 유동성 부족으로 서비스 종료를 겪기도`}</pre>

				<h3>유동성의 의미</h3>
				<pre>{`✔️ 경제적 관점에서 유동성이란 자산을 손실 없이 현금화할 수 있는 능력입니다.
✔️ 쉽게 말해, A 자산을 빠르고 쉽게 B 자산으로 바꿀 수 있는 가능성과 속도를 의미합니다.
✔️ 유동성이 높을수록 빠르게, 원하는 가격에 거래가 가능합니다.
✔️ 가장 유동성이 높은 자산은 ‘현금’입니다.`}</pre>

				<h3>거래소와 유동성의 관계</h3>
				<pre>{`✔️ 거래소는 사용자가 보유한 자산을 다른 자산으로 바꿀 수 있도록 하는 공간입니다.
✔️ 언제든지 거래가 성사되려면, 상대방의 자산(유동성)이 항상 준비돼 있어야 합니다.
✔️ 유동성이 부족하면 거래가 불가능하거나 매우 불리해집니다.
✔️ 유동성이 부족한 거래소는 사용자들에게 외면받게 됩니다.`}</pre>

				<h3>CEX와 DEX의 유동성 차이</h3>
				<pre>{`
📌 중앙화 거래소(CEX)
    - 거래소 거래소가 자체적으로 보유한 자산(현금 등)으로 유동성을 제공합니다.
    - 사용자는 즉시 거래소와 거래할 수 있습니다.

📌 탈중앙화 거래소(DEX)
    - 현금과 같은 중앙 자산이 없고, 오직 탈중앙화 자산끼리만 거래합니다.
    - 누군가가 미리 자산을 공급해놓아야 거래가 성립됩니다.`}</pre>

				<h3>유동성 공급자와 AMM</h3>
				<pre>{`✔️ DEX에서는 사용자가 직접 유동성을 공급해야 합니다.
✔️ 이를 유동성 공급자(Liquidity Provider, LP)라고 부릅니다.
✔️ 유니스왑은 AMM(Automated Market Maker) 방식을 통해 유동성을 자동 운용합니다.
✔️ 누구나 유동성을 공급할 수 있고, 공급자는 거래 수수료 등의 보상을 받을 수 있습니다.`}</pre>

				<h3>요약</h3>
				<pre>{`✔️ 유동성이란 "자산을 원하는 때에 원하는 방식으로 바꿀 수 있는 능력"입니다.
✔️ CEX는 자체 자산으로 유동성을 유지하지만,
✔️ DEX는 사용자 참여로 유동성을 유지해야 하며,
✔️ 유니스왑은 이를 AMM 방식으로 혁신적으로 해결한 DEX입니다.`}</pre>
			</div>
		),
	},
	{
		id: 3,
		date: '30/04/2025',
		tags: ['Liquidity Pool', 'Liquidity', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'Liquidity Pool',
		content: (
			<div>
				<h3>유동성 풀(Liquidity Pool)이란?</h3>
				<pre>{`✔️ 유동성 풀은 스마트 컨트랙트에 예치된 자산의 저장소입니다.
✔️ 중앙화 거래소에서는 거래소가 자산을 보관하지만,
✔️ DeFi에서는 스마트 컨트랙트가 자산을 보관하고 사용자가 직접 유동성을 공급합니다.
✔️ 이렇게 여러 사용자의 자산을 모은 공간을 '유동성 풀'이라고 부릅니다.`}</pre>

				<h3>유동성 풀의 구조와 원리</h3>
				<pre>{`✔️ DEX에서는 토큰 쌍(예: ETH-DAI)마다 별도의 유동성 풀이 존재합니다.
✔️ 사용자가 두 토큰을 예치하면, 해당 풀에 따라 자동으로 교환 비율이 결정됩니다.
✔️ 풀 내 자산의 상대적 비율에 따라 가격이 조정됩니다.`}</pre>

				<h3>유동성 공급자의 역할</h3>
				<pre>{`✔️ 유동성 풀은 누군가의 자산이 예치되어야 작동합니다.
✔️ 이 자산을 제공하는 사람을 유동성 공급자(LP)라고 합니다.
✔️ 누구나 LP가 될 수 있으며, 두 토큰을 비율에 맞춰 예치해야 합니다.
✔️ 예치 시 LP 토큰을 받고, 이를 통해 거래 수수료의 일부를 나눠 갖습니다.`}</pre>

				<h3>유동성 고갈이란?</h3>
				<pre>{`✔️ 유동성 풀이 부족하면 사용자는 원하는 거래를 할 수 없습니다.
✔️ 이는 거래 실패와 슬리피지 증가로 이어지고, 거래소 신뢰도를 떨어뜨립니다.
✔️ 따라서 거래소는 유동성을 유지하기 위해 보상 구조를 설계하고, LP에게 다양한 인센티브를 제공합니다.`}</pre>

				<h3>AMM이란?</h3>
				<pre>{`✔️ AMM(Automated Market Maker)은 알고리즘으로 가격을 결정하는 방식입니다.
✔️ 기존 중앙화 거래소의 오더북 방식(Peer-to-Peer)과 달리,
✔️ AMM은 사용자와 스마트 컨트랙트(Peer-to-Contract) 간 직접 거래가 이루어집니다.`}</pre>

				<h3>AMM의 핵심 원리</h3>
				<pre>{`✔️ 유동성 풀 안 자산의 비율로 가격을 자동 결정
✔️ 수요와 공급 변화에 따라 실시간으로 가격 조정
✔️ 유니스왑은 CPMM(Constant Product Market Maker) 모델을 사용
✔️ 해당 모델은 "x * y = k" 수식을 기반으로 가격을 계산`}</pre>

				<h3>유동성 풀이 중요한 이유</h3>
				<pre>{`✔️ 유동성은 거래 성사 여부, 거래 속도, 슬리피지 등 사용자 경험 전반에 영향을 줍니다.
✔️ 사용자가 많을수록 더 많은 유동성이 필요합니다.
✔️ 충분한 유동성을 유지하려면 적절한 보상과 구조 설계가 필수입니다.`}</pre>

				<h3>핵심 키워드 요약</h3>
				<pre>{`• 유동성: 자산 교환의 용이성
• 유동성 풀: 스마트 컨트랙트에 예치된 자산 저장소
• 유동성 공급자(LP): 자산을 예치하고 수수료를 받는 사람
• LP Token: 예치 증명 + 수익 배분 수단
• AMM: 자동 가격 결정 알고리즘
• CPMM: 유니스왑의 AMM 모델 (x * y = k)`}</pre>
			</div>
		),
	},
	{
		id: 4,
		date: '30/04/2025',
		tags: ['Impermanent Loss', 'Liquidity Pool', 'Liquidity', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: '비영구적 손실(Impermanent Loss)',
		content: (
			<div>
				<h3>비영구적 손실이란?</h3>
				<pre>{`✔️ 유동성 풀에 자산을 예치하면 거래 수수료를 받을 수 있습니다.
✔️ 하지만 자산 가격이 변동하면, 단순 보유했을 때보다 손해를 볼 수 있습니다.
✔️ 이러한 손해를 '비영구적 손실(Impermanent Loss)'이라고 합니다.
✔️ 이는 출금 시에 실제로 손실로 확정됩니다.`}</pre>

				<h3>왜 발생할까?</h3>
				<pre>{`✔️ 유동성 풀에는 항상 두 자산이 쌍으로 예치됩니다.
✔️ AMM은 이 자산들의 가격 균형을 자동 조정합니다.
✔️ 한쪽 자산의 가격이 급등하거나 급락하면, 자산이 자동으로 재배분되며 손실이 발생합니다.
✔️ 단순히 보유만 했을 때보다 결과적으로 가치가 줄어듭니다.`}</pre>

				<h3>예시로 보는 비영구적 손실</h3>
				<pre>{`상황:
    - Alice가 ETH 2개($100 → $200 상승) + USDT 200개를 풀에 예치
    - 예치 당시 총 자산 가치: $400
    - ETH 가격 상승 후 출금 시: $565.68

비교:
    - 단순 보유 시: $600
    - 유동성 풀 예치 시: $565.68
        → -5.72% 손실`}</pre>

				<h3>손실율 예시 (ETH 상승 시)</h3>
				<pre>{`ETH 상승폭    | 비영구적 손실율
-------------------------------
10%           | -0.11%
50%           | -2.02%
100%          | -5.72%

✔️ 가격 변동이 클수록 손실도 커집니다.
✔️ 손실은 실시간으로 누적되며, 출금 시 확정됩니다.`}</pre>

				<h3>손실이 생기는 구조</h3>
				<pre>{`✔️ AMM은 x * y = k 공식을 따릅니다.
✔️ 자산의 가격이 변동하면, 풀 안 자산의 수량이 자동으로 조정됩니다.
✔️ ETH 가격 상승 시: ETH는 빠져나가고, USDT는 쌓입니다.
✔️ 결과적으로 ETH 수량은 줄고, 총 가치가 감소합니다.`}</pre>

				<h3>그럼에도 공급하는 이유?</h3>
				<pre>{`✔️ 거래 수수료 수익 때문입니다.
✔️ 거래가 많을수록 LP는 수수료를 많이 받습니다.
✔️ 이 수수료 수익이 비영구적 손실을 상쇄하거나 초과할 수 있습니다.
✔️ 따라서 손해보다 수익이 크다고 판단되면 여전히 유동성 공급은 이익입니다.`}</pre>

				<h3>정리</h3>
				<pre>{`• 비영구적 손실:
  - 풀에 예치한 자산이 가격 변동으로 인해 손해를 보는 상황

• 발생 이유:
  - AMM이 자산 비율을 자동 조정하며 자산 수량이 줄어듦

• 방지 방법:
  - 없음. 다만 거래 수수료 수익으로 손실 상쇄 가능

• 고려 요소:
  - 수익률 vs 손실 가능성을 균형 있게 판단해야 함`}</pre>
			</div>
		),
	},
	{
		id: 5,
		date: '30/04/2025',
		tags: ['V1', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'Uniswap V1 - AMM & CPMM',
		content: (
			<div>
				<h3>AMM이란?</h3>
				<pre>{`✔️ AMM(Automated Market Maker)은 자동화된 시장 조성자입니다.
✔️ 매수자와 매도자를 직접 연결하지 않고,
✔️ 스마트 컨트랙트를 통해 자산의 가격을 자동 계산하고 거래를 체결합니다.`}</pre>

				<h3>AMM의 구성 요소</h3>
				<pre>{`1. 알고리즘 (가격 결정 공식)
2. 유동성 공급자 (LP)
3. 토큰 페어
4. 트레이더 (사용자)

✔️ 이 중 가장 핵심은 '가격 결정 알고리즘'입니다.
✔️ 가격은 유동성 풀의 자산 비율에 따라 자동 조정됩니다.`}</pre>

				<h3>CPMM이란?</h3>
				<pre>{`✔️ CPMM(Constant Product Market Maker)은 유니스왑이 사용하는 AMM 모델입니다.
✔️ 공식: x * y = k

x: 첫 번째 토큰의 수량
y: 두 번째 토큰의 수량
k: 상수 (항상 일정하게 유지됨)

✔️ 이 공식을 통해 두 자산의 가격 균형이 자동 유지됩니다.
✔️ 한 자산을 더 넣으면 다른 자산은 줄어들어야 k가 유지됩니다.`}</pre>

				<h3>수요와 공급에 따른 가격 변화</h3>
				<pre>{`✔️ X 토큰을 많이 넣을수록 Y 토큰은 덜 남게 됩니다.
✔️ 그 결과 Y 토큰의 가치가 올라가고, 가격이 상승합니다.
✔️ 이 과정을 자동으로 처리해주는 것이 CPMM입니다.`}</pre>

				<h3>CPMM 작동 예시</h3>
				<pre>{`초기 풀 상태: ETH 10개, VEN 50개 → k = 10 * 50 = 500

1 ETH를 풀에 공급하면:
ETH = 11개 → VEN = 500 / 11 ≒ 45.5개 → VEN 4.5개를 받음

또 1 ETH 공급하면:
ETH = 12개 → VEN = 500 / 12 ≒ 41.7개 → VEN 3.8개를 받음

✔️ ETH를 더 넣을수록 VEN은 덜 나오게 되며,
✔️ 이는 VEN 가격이 올라간다는 것을 의미합니다.`}</pre>

				<h3>시장 균형과 차익거래</h3>
				<pre>{`✔️ 유니스왑 풀의 가격이 외부 거래소와 다르면 차익거래가 발생합니다.
✔️ 예: VEN 가격이 유니스왑에서 더 높으면,
→ 다른 거래소에서 VEN을 싸게 사서 유니스왑에서 ETH로 교환
✔️ 이러한 반복적인 거래는 가격을 외부 시장과 일치시킵니다.
✔️ AMM 기반 풀은 결국 외부 시장과 유사한 가격을 유지하게 됩니다.`}</pre>

				<h3>정리</h3>
				<pre>{`• AMM: 자동으로 가격을 정하고 거래를 체결하는 시스템
• CPMM: x * y = k 모델을 사용하는 AMM 알고리즘
• 가격 결정: 풀 안 자산의 비율로 실시간 조정
• 차익거래: 외부와의 가격 차이를 제거함
• 특징: 오더북 없이도 거래가 가능, 누구나 유동성 공급 참여 가능`}</pre>
			</div>
		),
	},
	{
		id: 6,
		date: '30/04/2025',
		tags: ['Slippage', 'V1', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: '슬리피지(Slippage)',
		content: (
			<div>
				<h3>슬리피지(Slippage)란?</h3>
				<pre>{`✔️ 슬리피지는 "거래를 하려고 예상한 가격과 실제 거래가 체결된 가격의 차이"를 의미합니다.
✔️ 어원: 'slip' = 미끄러짐.
✔️ 주로 오더북 기반 시스템(주식 시장 등)에서 발생합니다.
✔️ 수요와 공급 변화로, 의도한 가격보다 비싸거나 싸게 체결될 수 있습니다.`}</pre>

				<h3>주식 시장 예시</h3>
				<pre>{`✔️ Alice가 $100에 500주를 매수하려 했지만,
✔️ Bob의 선행 매수로 인해 주문이 $120에 체결됨.
✔️ 실제 지불액은 $60,000 → 예상보다 $10,000 초과.
✔️ 이는 오더북 변화에 따른 슬리피지입니다.`}</pre>

				<h3>AMM 기반 DEX에서도 슬리피지가 발생할까?</h3>
				<pre>{`✔️ 발생합니다. 오더북 대신 알고리즘으로 가격이 계산되기 때문입니다.
✔️ 거래는 유동성 풀을 통해 체결되고, 수요 급증 시 가격이 자동 조정됩니다.
✔️ 예: 1ETH = 5VEN 예상했지만 실제로는 4.5VEN 수령 → 슬리피지 발생.`}</pre>

				<h3>유동성 풀 규모 vs 슬리피지</h3>
				<pre>{`풀 1: 작은 풀
    ETH 10개, SMT 200개 → k = 2,000
    Alice가 5ETH 예치 → 예상 100SMT, 실제 66.67SMT
    슬리피지: 33.33SMT

풀 2: 큰 풀
    ETH 1,000개, SMT 20,000개 → k = 20,000,000
    Alice가 5ETH 예치 → 예상 100SMT, 실제 99.5SMT
    슬리피지: 0.5SMT

✔️ 유동성 풀이 클수록 슬리피지는 줄어듭니다.`}</pre>

				<h3>왜 슬리피지가 중요한가?</h3>
				<pre>{`✔️ 트레이더는 슬리피지가 적은 DEX를 선호합니다.
✔️ 슬리피지를 줄이기 위해 DEX는 유동성을 확보해야 합니다.
✔️ 이를 위해 유동성 공급자에게 인센티브를 제공합니다.
✔️ DEX의 신뢰도를 보여주는 지표: TVL (Total Value Locked)
✔️ TVL이 높을수록 슬리피지 적고, 거래 체결 빠르고, 사용자 만족도 높습니다.`}</pre>

				<h3>정리</h3>
				<pre>{`• 슬리피지: 예상 가격과 실제 체결 가격의 차이
• 발생 원인: 수요/공급 변화, 거래량 폭발
• AMM에서의 발생: x * y = k 알고리즘에 따른 자동 가격 조정
• 유동성과의 관계: 유동성 풀이 클수록 슬리피지가 줄어듦
• 대응 방법: 유동성 공급을 유도하여 TVL을 높이는 것`}</pre>
			</div>
		),
	},
	{
		id: 7,
		date: '30/04/2025',
		tags: ['P2C', 'V1', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: '거래 구조 P2C(Peer-to-Contract)',
		content: (
			<div>
				<h3>Uniswap의 거래 구조</h3>
				<pre>{`✔️ Uniswap은 기존의 P2P(Peer-to-Peer) 방식이 아닌, P2C(Peer-to-Contract) 방식을 사용합니다.`}</pre>
				<h3>기존 방식 (P2P)</h3>
				<pre>{`✔️ 매수자와 매도자가 직접 연결되어 거래가 이뤄집니다.
✔️ 블록체인에서는 이 방식이 가스비도 많이 들고, 비효율적입니다.`}</pre>
				<h3>Uniswap 방식 (P2C)</h3>
				<pre>{`✔️ 사용자는 스마트 컨트랙트와 직접 거래합니다.
✔️ 유동성 풀을 활용해 언제든지 거래가 가능하며,
✔️ 상대방을 기다릴 필요 없이 자동 교환됩니다.`}</pre>
				<h3>Uniswap의 구성</h3>
				<pre>{`✔️ ETH - ERC20 토큰 페어로 구성된 유동성 풀이 존재합니다.
✔️ 각 페어마다 별도의 Token Exchange Contract가 생성됩니다.
✔️ 이 컨트랙트들은 Factory Contract를 통해 자동으로 만들어집니다.`}</pre>
				<h3>거래 흐름</h3>
				<pre>{`1. 유동성 공급자가 ETH와 토큰을 페어로 예치합니다.
2. Factory가 해당 페어에 대한 Token Exchange Contract를 생성합니다.
3. 사용자는 해당 컨트랙트를 통해 자동으로 토큰을 교환합니다.`}</pre>
				<h3>핵심 기술</h3>
				<pre>{`✔️ Uniswap은 AMM - CPMM(x * y = k) 모델을 기반으로 작동합니다.
✔️ 이를 통해 가격이 자동으로 결정되고, 유동성이 실시간으로 조정됩니다.
✔️ 유동성 풀이 클수록 슬리피지는 적고, 거래가 안정적입니다.`}</pre>
			</div>
		),
	},
	{
		id: 8,
		date: '30/04/2025',
		tags: ['V2', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'Uniswap V2',
		content: (
			<div>
				<h3>Uniswap V2 개요</h3>
				<pre>{`✔️ Uniswap V1은 탈중앙화 시장의 가능성을 열었지만, 여러 한계가 존재했습니다.
✔️ 이를 해결하기 위해 2019년 연구개발팀이 구성되었고, 2020년 5월 Uniswap V2가 출시되었습니다.
✔️ V1의 구조를 유지하면서도 사용성과 기능 측면에서 다양한 개선이 이뤄졌습니다.`}</pre>

				<h3>1. ERC20 - ERC20 페어 지원</h3>
				<pre>{`✔️ V1에서는 모든 거래가 ETH를 중개로 사용해야 했습니다.
    예: DAI → ETH → USDC

✔️ V2에서는 직접 DAI → USDC처럼 ERC20 간 교환이 가능해졌습니다.

결과:
    - 더 낮은 수수료
    - 더 적은 슬리피지
    - 간결한 거래 구조`}</pre>

				<h3>2. TWAP 기반 가격 오라클</h3>
				<pre>{`✔️ V2는 외부 컨트랙트가 가격을 읽을 수 있도록 오라클 기능을 추가했습니다.
✔️ 실시간 가격은 조작 가능성이 있기 때문에,
✔️ '시간 가중 평균 가격(TWAP)' 방식을 사용합니다.

특징:
    - 일정 시간의 평균 가격을 기준으로 제공
    - 가격 조작 방지
    - DeFi 생태계에서 안정적인 가격 참조 가능`}</pre>

				<h3>3. 플래시 스왑 (Flash Swap)</h3>
				<pre>{`✔️ 한 트랜잭션 내에서 유동성 풀에서 토큰을 선불 없이 빌릴 수 있습니다.

조건:
    - 트랜잭션 종료 전, 아래 중 하나를 반드시 수행
        ① 동일한 토큰을 반환
        ② 다른 자산을 예치
        ③ 둘을 조합하여 일부 반환

활용:
    - 무담보 아비트리지
    - 레버리지 전략
    - 리밸런싱 등 고급 전략을 한 트랜잭션 안에서 처리 가능`}</pre>

				<h3>4. Core / Periphery 아키텍처 분리</h3>
				<pre>{`✔️ V2는 핵심 로직과 사용자 인터페이스 역할을 분리했습니다.

- Core Contract:
  유동성 풀, 스왑, 유동성 제공 등 핵심 기능

- Periphery Contract:
  라우팅, 편의 기능, 사용자 인터페이스 처리

장점:
    - 보안성과 안정성 강화
    - 유지보수와 업그레이드 용이`}</pre>
			</div>
		),
	},
	{
		id: 9,
		date: '30/04/2025',
		tags: ['V2', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'Uniswap V1 vs V2: ERC20-ERC20 스왑의 변화',
		content: (
			<div>
				<h3>Uniswap V1의 스왑 구조</h3>
				<pre>{`✔️ V1에서는 ETH-ERC20 페어만 유동성 풀로 지원했습니다.
✔️ ERC20-ERC20 간 직접 스왑은 불가능했습니다.`}</pre>

				<h3>ERC20 간 스왑 구조 (V1)</h3>
				<pre>{`✔️ 단일 트랜잭션 내에서 ERC20 → ETH → ERC20 방식으로 작동했습니다.
✔️ 이를 "ETH Bridging"이라 부릅니다.

    예: DAI → ETH → USDC
        ① DAI-ETH 풀에서 DAI를 ETH로 교환
        ② ETH-USDC 풀에서 ETH를 USDC로 교환`}</pre>

				<h3>V1의 문제점</h3>
				<pre>{`❌ 유동성 공급자 불편
    - 유동성 공급 시 반드시 ETH가 포함돼야 함
    - DAI-USDC 풀을 만들려면 ETH-DAI, ETH-USDC 풀을 따로 제공해야 함
    - ETH 가격 변동 리스크 존재

❌ 트레이더 불리
    - 내부적으로 스왑이 두 번 발생 → 수수료 0.6% (0.3% × 2)
    - 두 유동성 풀 이용 → 슬리피지 증가`}</pre>

				<h3>Uniswap V2의 개선: ERC20-ERC20 풀 도입</h3>
				<pre>{`✔️ V2에서는 ERC20 간 직접 유동성 풀 지원
✔️ ETH Bridging 없이 직접 스왑 가능
✔️ 수수료 0.3%로 단일화
✔️ 슬리피지 감소 및 효율적인 거래 가능`}</pre>

				<h3>지원 스왑 방식 (V2)</h3>
				<pre>{`1. 다이렉트 스왑
- ERC20-ERC20 유동성 풀이 있을 경우 직접 스왑

2. ETH 사용 스왑
- 유동성 풀이 없을 경우, 기존처럼 ETH 경유 방식 사용

3. 커스텀 스왑
- 사용자가 중간 경로(토큰)를 직접 설정
- 예: DAI → OMG → USDC`}</pre>

				<h3>Router 컨트랙트의 역할</h3>
				<pre>{`✔️ 가장 효율적인 스왑 경로를 계산
✔️ 단일/다단계 스왑을 자동 실행
✔️ 사용자 경험 향상 및 슬리피지 최소화`}</pre>

				<h3>wETH 도입</h3>
				<pre>{`✔️ ETH를 ERC20 규격에 맞춰 래핑한 토큰 (wETH)
✔️ ETH처럼 사용할 수 있지만 ERC20처럼 작동

효과:
    - ETH도 ERC20과 동일하게 처리 가능
    - 코드 복잡성 감소
    - 다양한 스왑 조합 가능`}</pre>

				<h3>정리</h3>
				<pre>{`• ERC20 스왑:
  - V1: ETH를 경유 (2단계)
  - V2: 직접 스왑 가능

• 수수료:
  - V1: 0.6% (0.3% × 2)
  - V2: 0.3%

• 유동성 구조:
  - V1: ETH 필수
  - V2: ERC20 페어 가능

• 리스크:
  - V1: ETH 포함으로 높음
  - V2: 낮음

• 슬리피지:
  - V1: 높음
  - V2: 낮음

• wETH 지원:
  - V1: 없음
  - V2: 있음`}</pre>
			</div>
		),
	},
	{
		id: 10,
		date: '30/04/2025',
		tags: ['Flash swap', 'Flash loan', 'V2', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'Flash Swap & Flash Loan',
		content: (
			<div>
				<h3>Uniswap V2에서 대출이 가능하다고?</h3>
				<pre>{`✔️ Uniswap은 스왑 전용 프로토콜이지만, V2부터 플래시 스왑(Flash Swap) 기능이 추가되어 대출 개념을 구현할 수 있게 되었습니다`}</pre>

				<h3>일반 대출 vs 플래시론</h3>
				<pre>{`• 일반 대출:
  - 일정 기간 내 상환 필요
  - 담보나 신용 기반
  - 미상환 시 손실 발생 가능

• 플래시론(Flash Loan):
  - 단일 트랜잭션 내 대출 → 사용 → 상환까지 모두 완료
  - 실패 시 트랜잭션 전체가 취소됨 → 대출자 보호`}</pre>

				<h3>플래시론 예시 코드</h3>
				<SyntaxHighlighter language='solidity' style={vscDarkPlus}>{`function doFlashLoan(uint256 amount){
  uint256 loanAmount = flashLoan(amount);      // 대출 수령
  uint256 profit = doSomething(loanAmount);    // 사용
  repay(amount + fee);                         // 상환
  transfer(profit - amount - fee);             // 이익 확보
}`}</SyntaxHighlighter>

				<h3>핵심 특징</h3>
				<pre>{`✔️ 초단기 무담보 대출
✔️ 이더리움의 '프로그램 가능한 돈' 특성 활용
✔️ 실패 시 전체 롤백 → 자산 유출 없음`}</pre>

				<h3>차익거래 예시</h3>
				<pre>{`✔️ Uniswap: 1 DAI = 10 USDC
✔️ SushiSwap: 1 DAI = 10.5 USDC

1. 100 USDC 대출
2. Uniswap에서 10 DAI 구매
3. SushiSwap에서 10 DAI → 105 USDC 판매
4. 100 USDC + 수수료 상환 → 5 USDC 이익`}</pre>

				<h3>Uniswap V2의 Flash Swap</h3>
				<pre>{`✔️ 플래시 스왑은 유동성 풀의 리저브 일부 또는 전체를 꺼내어 사용할 수 있게 해주는 기능입니다.

순서:
1. 풀에서 토큰 꺼냄
2. 외부에서 수익 창출 (예: 스왑)
3. 같은 트랜잭션 내에서 상환`}</pre>

				<h3>전통 투자 vs 플래시 스왑</h3>
				<pre>{`• 전통 투자:
  - 초기 자본 필요
  - 스왑 2회 시 수수료 발생

• 플래시 스왑:
  - 초기 자본 없이 실행 가능
  - 꺼낸 자산으로 수익 창출 후 상환
  - 남은 수익은 본인이 확보`}</pre>

				<h3>정리</h3>
				<pre>{`• 상환 기간:
  - 일반 대출: 며칠~수개월
  - 플래시론: 1트랜잭션 내 완료

• 담보:
  - 일반 대출: 필요
  - 플래시론: 불필요

• 리스크:
  - 일반 대출: 미상환 시 손실
  - 플래시론: 실패 시 트랜잭션 취소로 리스크 없음

• 사용 사례:
  - 일반 대출: 부동산, 차량 등
  - 플래시론: 차익거래, 리밸런싱, 레버리지 전략 등`}</pre>
			</div>
		),
	},
	{
		id: 11,
		date: '30/04/2025',
		tags: ['TWAP', 'Oracle', 'V2', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'Price Oracle: 가격 조작을 막는 방법',
		content: (
			<div>
				<h3>Price Oracle이란?</h3>
				<pre>{`✔️ Price Oracle은 외부에서 자산의 가격 정보를 스마트 컨트랙트에 제공하는 역할을 합니다.
✔️ 예: DAI의 시세를 스마트 컨트랙트가 알고 싶을 때 오라클을 통해 받아옵니다.`}</pre>

				<h3>바람직한 오라클의 조건</h3>
				<pre>{`✔️ DeFi에서는 조작이 어렵고 신뢰할 수 있는 가격 정보가 매우 중요합니다.
✔️ 예: DAI의 상승/하락에 베팅하는 dApp은 정확한 가격 데이터가 필수입니다.`}</pre>

				<h3>Uniswap V1의 오라클 방식</h3>
				<pre>{`✔️ 유니스왑은 온체인 AMM으로 리저브 기반 실시간 가격 제공이 가능합니다.
✔️ DAI 가격 = DAI 리저브 / ETH 리저브
✔️ 이러한 방식은 Spot Price(현물 가격)이라 불립니다.`}</pre>

				<h3>V1의 문제점: 조작 쉬움</h3>
				<pre>{`❌ 대량 스왑으로 일시적으로 리저브를 바꾸어 가격 조작 가능
❌ dApp이 이 가격에 의존하면 공격자는 부당한 이익 획득 가능
✔️ 예: 공격자가 ETH-DAI 풀에서 스왑으로 DAI 가격을 높인 뒤, 베팅에서 이익을 얻고 되팔아 원래대로 복구

➡ 온체인이라 접근성은 좋지만, 신뢰도는 낮음
➡ MEV처럼 채굴자가 트랜잭션 순서를 조작해 공격할 수도 있음`}</pre>

				<h3>V1 요약</h3>
				<pre>{`• 가격 제공: 리저브 기반 Spot Price
• 장점: 온체인, 접근 쉬움
• 단점: 조작 쉬움, 변동 큼
• 문제: 외부 컨트랙트가 부정확한 가격에 의존할 경우 피해 발생`}</pre>

				<h3>해결책: Uniswap V2의 TWAP 오라클</h3>
				<pre>{`✔️ TWAP(Time-Weighted Average Price): 일정 시간 동안의 평균 가격을 계산합니다.
✔️ 가격을 순간적으로 조작해도 평균에는 영향이 적음
✔️ 결과적으로 조작에 강한 오라클 기능을 제공할 수 있음`}</pre>

				<h3>TWAP의 효과</h3>
				<pre>{`✔️ 외부 dApp이 보다 안전한 가격 정보를 활용 가능
✔️ 순간적인 공격에 휘둘리지 않는 구조
✔️ DeFi 생태계에서 대출, 베팅, 파생상품 등 다양한 분야에 활용 가능`}</pre>

				<h3>V1 vs V2 비교</h3>
				<pre>{`• 가격 제공:
  - V1: Spot Price
  - V2: TWAP (시간 가중 평균)

• 조작 난이도:
  - V1: 쉬움
  - V2: 어려움

• 신뢰성:
  - V1: 낮음
  - V2: 높음

• DeFi 활용도:
  - V1: 제한적
  - V2: 대출, 예측시장 등 다양함`}</pre>
			</div>
		),
	},
	{
		id: 12,
		date: '30/04/2025',
		tags: ['TWAP', 'Oracle', 'V2', 'Uniswap', 'DEX', 'Defi', 'Blockchain'],
		title: 'TWAP(Time-Weighted Average Price) 오라클',
		content: (
			<div>
				<h3>Uniswap V2의 TWAP 오라클</h3>
				<pre>{`✔️ Uniswap V1은 Spot Price를 제공했지만, 유동성 풀에 대한 영향력이 커 조작 위험이 있었습니다.
✔️ 이를 해결하기 위해 V2는 TWAP(Time-Weighted Average Price) 방식을 도입했습니다.`}</pre>

				<h3>TWAP 개념</h3>
				<pre>{`✔️ 특정 시간 동안의 가격에 시간 가중치를 적용해 평균 가격을 계산합니다.
✔️ 가격 × 시간의 누적값을 저장하여 신뢰도 높은 평균을 제공하게 됩니다.`}</pre>

				<h3>TWAP의 장점</h3>
				<pre>{`✔️ Gas 효율적으로 오라클 가격 확인 가능
✔️ 임의의 시간 구간의 평균 가격 산출 가능
✔️ 조작 저항성이 뛰어남`}</pre>

				<h3>TWAP 동작 방식</h3>
				<pre>{`✔️ 유동성 풀에는 price0Cumulative, price1Cumulative가 존재합니다.
✔️ 마지막 스왑 이후 경과 시간 × 가격 → 누적값에 더해짐
✔️ 스왑이 발생할 때 _update() 함수로 누적값이 갱신됩니다.`}</pre>

				<h3>_update() 함수 요약</h3>
				<pre>{`1. 현재 블록 타임스탬프 저장
2. 마지막 갱신 이후 경과 시간 계산
3. 경과 시간 × 현재 가격 → 누적값 갱신
4. 리저브 상태 reserve0, reserve1 최신화`}</pre>

				<h3>조작 방지 메커니즘</h3>
				<pre>{`✔️ 가격은 블록 단위로 누적됨 → 조작하려면 여러 블록을 조작해야 함
✔️ 현재 balance 대신 캐싱된 reserve 사용 → 공격자가 단순 입금으로 수치 조작 불가
✔️ 다음 블록부터 가격 반영 → 한 블록 내 베팅 조작 불가`}</pre>

				<h3>공격 시나리오 비교</h3>
				<pre>{`• V1:
  - 한 블록 내 여러 트랜잭션 조작 가능
  - 베팅 dApp 등 외부 서비스 피해 발생

• V2:
  - 두 블록 이상 지속 조작 필요
  - 실패 확률 높고 비용도 증가`}</pre>

				<h3>TWAP 가격 계산</h3>
				<pre>{`1. 과거와 현재의 priceCumulative 값 구함 (pc1, pc2)
2. 해당 구간 시간 차이 구함 (t2 - t1)
3. 평균 가격 = (pc2 - pc1) / (t2 - t1)
➡ 안전하고 신뢰 가능한 온체인 오라클 데이터 획득 가능`}</pre>

				<h3>캐싱 사용하는 이유</h3>
				<pre>{`✔️ reserve: 캐싱된 실제 리저브 값 → 조작 불가
✔️ balance: 현재 상태 값 → 조작 가능성 존재
✔️ _update()는 reserve로 계산 → 안정성 확보`}</pre>

				<h3>정리</h3>
				<pre>{`• 가격 방식:
  - V1: Spot Price
  - V2: TWAP (시간 가중 평균)

• 조작 난이도:
  - V1: 쉬움
  - V2: 매우 어려움

• 계산 구조:
  - V1: 실시간 리저브 비율
  - V2: 누적값 기반 평균

• 방어 전략:
  - V1: 없음
  - V2: 블록 단위 누적 + 캐싱 사용 + 평균 계산

➡ Uniswap V2의 TWAP은 DeFi 오라클의 안전성과 신뢰도를 높인 대표적 사례입니다.`}</pre>
			</div>
		),
	},
]
